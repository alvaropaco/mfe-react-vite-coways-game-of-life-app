import{j as a}from"./jsx-runtime-CCjYJYRa.js";import{r as g,R as I}from"./index-uubelm5h.js";import{B}from"./BoardGrid-zkF-HHGo.js";import{u as D,a as Q,b as S}from"./index-BY2KGthq.js";import"./QueryClientProvider-CTBEmn7f.js";var T=g.createContext(void 0),_=t=>{const o=g.useContext(T);if(!o)throw new Error("No QueryClient set, use QueryClientProvider to set one");return o};const h=20,F=(t=h)=>Array.from({length:t},()=>Array.from({length:t},()=>!1));function v(t,o,r){if(t&&Array.isArray(t))return t;const e=o??h,n=r??h;return Array.from({length:e},()=>Array.from({length:n},()=>!1))}function G(t){let o=0;for(let r=0;r<t.length;r++){const e=t[r];for(let n=0;n<e.length;n++)e[n]&&o++}return o}function C(){const[t,o]=g.useState(()=>localStorage.getItem("boardId")),r=D(),{data:e,isLoading:n,error:p}=Q(t??void 0),d=S(t),c=_();g.useEffect(()=>{(async()=>{if(!t&&!r.isPending){const l={grid:F()};try{const s=await r.mutateAsync(l);localStorage.setItem("boardId",s);try{window.dispatchEvent(new CustomEvent("gol:boardIdChanged",{detail:s}))}catch{}o(s)}catch{}}})()},[t]);const E=I.useCallback(async(l,s)=>{try{window.dispatchEvent(new Event("gol:boardInteracted"))}catch{}if(!e||!t)return;const i=v(e.grid,e.height,e.width).map(A=>A.slice());i[l][s]=!i[l][s];const f=["board",t],u=c.getQueryData(f),y=u?{...u,grid:i,aliveCount:G(i)}:void 0;y&&c.setQueryData(f,y);try{await d.mutateAsync(i)}catch{u&&c.setQueryData(f,u)}},[e,t,c,d]);if(!t)return a.jsx("div",{children:"Loading board..."});if(n)return a.jsx("div",{children:"Loading board..."});if(p)return a.jsxs("div",{style:{color:"#b00"},children:["Failed to load board: ",p.message]});if(!e)return a.jsx("div",{children:"No board data."});const j=v(e.grid,e.height,e.width);return a.jsxs("div",{children:[a.jsx(B,{grid:j,onToggle:E}),r.isError&&a.jsxs("div",{style:{color:"#b00",marginTop:8},children:["Failed to create board: ",r.error.message]}),d.isError&&a.jsxs("div",{style:{color:"#b00",marginTop:8},children:["Failed to update board: ",d.error.message]}),a.jsxs("div",{style:{marginTop:8,color:"#666"},children:["Board ID: ",t," • Gen: ",e.generation," • Alive: ",e.aliveCount]})]})}C.__docgenInfo={description:"",methods:[],displayName:"Board"};const M={title:"Board/Board (Container)",component:C},m={};var b,x,w;m.parameters={...m.parameters,docs:{...(b=m.parameters)==null?void 0:b.docs,source:{originalSource:"{}",...(w=(x=m.parameters)==null?void 0:x.docs)==null?void 0:w.source}}};const P=["Default"];export{m as Default,P as __namedExportsOrder,M as default};
